

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 26 12:19:18 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14  0000                     
    15                           ; Generated 23/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _ADRES	set	4035
    50  0000                     _ADRESH	set	4036
    51  0000                     _TRISD	set	3989
    52  0000                     _LATD	set	3980
    53  0000                     _PORTD	set	3971
    54  0000                     _ADCON0bits	set	4034
    55  0000                     _ADCON2bits	set	4032
    56  0000                     _ADCON1bits	set	4033
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61  007EBC                     __pcinit:
    62                           	callstack 0
    63  007EBC                     start_initialization:
    64                           	callstack 0
    65  007EBC                     __initialization:
    66                           	callstack 0
    67  007EBC                     end_of_initialization:
    68                           	callstack 0
    69  007EBC                     __end_of__initialization:
    70                           	callstack 0
    71  007EBC  0E00               	movlw	low (__Lmediumconst shr (0+16))
    72  007EBE  6EF8               	movwf	tblptru,c
    73  007EC0  0100               	movlb	0
    74  007EC2  EF63  F03F         	goto	_main	;jump to C main() function
    75                           
    76                           	psect	cstackCOMRAM
    77  000001                     __pcstackCOMRAM:
    78                           	callstack 0
    79  000001                     ?_readADC:
    80                           	callstack 0
    81  000001                     initADC@channels:
    82                           	callstack 0
    83                           
    84                           ; 1 bytes @ 0x0
    85  000001                     	ds	1
    86  000002                     initADC@justified:
    87                           	callstack 0
    88                           
    89                           ; 1 bytes @ 0x1
    90  000002                     	ds	1
    91  000003                     ??_initADC:
    92  000003                     ??_readADC:
    93                           
    94                           ; 1 bytes @ 0x2
    95  000003                     	ds	1
    96  000004                     readADC@channel:
    97                           	callstack 0
    98                           
    99                           ; 1 bytes @ 0x3
   100  000004                     	ds	1
   101  000005                     initADC@xtal_frec:
   102                           	callstack 0
   103                           
   104                           ; 1 bytes @ 0x4
   105  000005                     	ds	1
   106  000006                     ??_main:
   107                           
   108                           ; 1 bytes @ 0x5
   109  000006                     	ds	1
   110                           
   111 ;;
   112 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   113 ;;
   114 ;; *************** function _main *****************
   115 ;; Defined at:
   116 ;;		line 19 in file "main.c"
   117 ;; Parameters:    Size  Location     Type
   118 ;;		None
   119 ;; Auto vars:     Size  Location     Type
   120 ;;  data            2    0        unsigned short 
   121 ;; Return value:  Size  Location     Type
   122 ;;                  1    wreg      void 
   123 ;; Registers used:
   124 ;;		wreg, status,2, status,0, cstack
   125 ;; Tracked objects:
   126 ;;		On entry : 0/0
   127 ;;		On exit  : 0/0
   128 ;;		Unchanged: 0/0
   129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   130 ;;      Params:         0       0       0       0       0       0       0       0       0
   131 ;;      Locals:         0       0       0       0       0       0       0       0       0
   132 ;;      Temps:          1       0       0       0       0       0       0       0       0
   133 ;;      Totals:         1       0       0       0       0       0       0       0       0
   134 ;;Total ram usage:        1 bytes
   135 ;; Hardware stack levels required when called: 1
   136 ;; This function calls:
   137 ;;		_initADC
   138 ;;		_readADC
   139 ;; This function is called by:
   140 ;;		Startup code after reset
   141 ;; This function uses a non-reentrant model
   142 ;;
   143                           
   144                           	psect	text0
   145  007EC6                     __ptext0:
   146                           	callstack 0
   147  007EC6                     _main:
   148                           	callstack 30
   149  007EC6                     
   150                           ;main.c: 23:     PORTD = 0x00;
   151  007EC6  0E00               	movlw	0
   152  007EC8  6E83               	movwf	131,c	;volatile
   153                           
   154                           ;main.c: 24:     LATD = 0x00;
   155  007ECA  0E00               	movlw	0
   156  007ECC  6E8C               	movwf	140,c	;volatile
   157                           
   158                           ;main.c: 25:     TRISD = 0x00;
   159  007ECE  0E00               	movlw	0
   160  007ED0  6E95               	movwf	149,c	;volatile
   161  007ED2                     
   162                           ;main.c: 28:     initADC(2, 1, 1);
   163  007ED2  0E01               	movlw	1
   164  007ED4  6E01               	movwf	initADC@channels^0,c
   165  007ED6  0E01               	movlw	1
   166  007ED8  6E02               	movwf	initADC@justified^0,c
   167  007EDA  0E02               	movlw	2
   168  007EDC  ECA8  F03F         	call	_initADC
   169  007EE0                     l808:
   170  007EE0  0E00               	movlw	0
   171  007EE2  EC81  F03F         	call	_readADC
   172  007EE6                     
   173                           ;main.c: 34:         LATD = ADRESH;
   174  007EE6  CFC4 FF8C          	movff	4036,3980	;volatile
   175  007EEA                     
   176                           ;main.c: 35:         _delay((unsigned long)((10)*(20000000/4000.0)));
   177  007EEA  0E41               	movlw	65
   178  007EEC  6E06               	movwf	??_main^0,c
   179  007EEE  0EEE               	movlw	238
   180  007EF0                     u77:
   181  007EF0  2EE8               	decfsz	wreg,f,c
   182  007EF2  D7FE               	bra	u77
   183  007EF4  2E06               	decfsz	??_main^0,f,c
   184  007EF6  D7FC               	bra	u77
   185  007EF8  D000               	nop2	
   186  007EFA  EF70  F03F         	goto	l808
   187  007EFE  EF00  F000         	goto	start
   188  007F02                     __end_of_main:
   189                           	callstack 0
   190                           
   191 ;; *************** function _readADC *****************
   192 ;; Defined at:
   193 ;;		line 40 in file "../Peripherals/ADC/ADC4550.c"
   194 ;; Parameters:    Size  Location     Type
   195 ;;  channel         1    wreg     unsigned char 
   196 ;; Auto vars:     Size  Location     Type
   197 ;;  channel         1    3[COMRAM] unsigned char 
   198 ;; Return value:  Size  Location     Type
   199 ;;                  2    0[COMRAM] unsigned short 
   200 ;; Registers used:
   201 ;;		wreg, status,2, status,0
   202 ;; Tracked objects:
   203 ;;		On entry : 0/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   207 ;;      Params:         2       0       0       0       0       0       0       0       0
   208 ;;      Locals:         1       0       0       0       0       0       0       0       0
   209 ;;      Temps:          1       0       0       0       0       0       0       0       0
   210 ;;      Totals:         4       0       0       0       0       0       0       0       0
   211 ;;Total ram usage:        4 bytes
   212 ;; Hardware stack levels used: 1
   213 ;; This function calls:
   214 ;;		Nothing
   215 ;; This function is called by:
   216 ;;		_main
   217 ;; This function uses a non-reentrant model
   218 ;;
   219                           
   220                           	psect	text1
   221  007F02                     __ptext1:
   222                           	callstack 0
   223  007F02                     _readADC:
   224                           	callstack 30
   225                           
   226                           ;incstack = 0
   227                           ;readADC@channel stored from wreg
   228  007F02  6E04               	movwf	readADC@channel^0,c
   229  007F04                     
   230                           ;../Peripherals/ADC/ADC4550.c: 41:     if(channel > 13){
   231  007F04  0E0D               	movlw	13
   232  007F06  6404               	cpfsgt	readADC@channel^0,c
   233  007F08  EF88  F03F         	goto	u51
   234  007F0C  EF8A  F03F         	goto	u50
   235  007F10                     u51:
   236  007F10  EF90  F03F         	goto	l798
   237  007F14                     u50:
   238  007F14                     
   239                           ;../Peripherals/ADC/ADC4550.c: 42:         return 0;
   240  007F14  0E00               	movlw	0
   241  007F16  6E02               	movwf	(?_readADC+1)^0,c
   242  007F18  0E00               	movlw	0
   243  007F1A  6E01               	movwf	?_readADC^0,c
   244  007F1C  EFA7  F03F         	goto	l21
   245  007F20                     l798:
   246                           
   247                           ;../Peripherals/ADC/ADC4550.c: 44:     ADCON0bits.CHS = channel;
   248  007F20  C004  F003         	movff	readADC@channel,??_readADC
   249  007F24  4603               	rlncf	??_readADC^0,f,c
   250  007F26  4603               	rlncf	??_readADC^0,f,c
   251  007F28  50C2               	movf	194,w,c	;volatile
   252  007F2A  1803               	xorwf	??_readADC^0,w,c
   253  007F2C  0BC3               	andlw	-61
   254  007F2E  1803               	xorwf	??_readADC^0,w,c
   255  007F30  6EC2               	movwf	194,c	;volatile
   256  007F32                     
   257                           ;../Peripherals/ADC/ADC4550.c: 45:     ADCON0bits.ADON = 1;
   258  007F32  80C2               	bsf	194,0,c	;volatile
   259  007F34                     
   260                           ;../Peripherals/ADC/ADC4550.c: 46:     ADCON0bits.GO_DONE = 1;
   261  007F34  82C2               	bsf	194,1,c	;volatile
   262  007F36                     l22:
   263  007F36  B2C2               	btfsc	194,1,c	;volatile
   264  007F38  EFA0  F03F         	goto	u61
   265  007F3C  EFA2  F03F         	goto	u60
   266  007F40                     u61:
   267  007F40  EF9B  F03F         	goto	l22
   268  007F44                     u60:
   269  007F44                     
   270                           ;../Peripherals/ADC/ADC4550.c: 48:     ADCON0bits.ADON = 0;
   271  007F44  90C2               	bcf	194,0,c	;volatile
   272                           
   273                           ;../Peripherals/ADC/ADC4550.c: 49:     return ADRES;
   274  007F46  CFC3 F001          	movff	4035,?_readADC	;volatile
   275  007F4A  CFC4 F002          	movff	4036,?_readADC+1	;volatile
   276  007F4E                     l21:
   277  007F4E  0012               	return		;funcret
   278  007F50                     __end_of_readADC:
   279                           	callstack 0
   280                           
   281 ;; *************** function _initADC *****************
   282 ;; Defined at:
   283 ;;		line 12 in file "../Peripherals/ADC/ADC4550.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;  xtal_frec       1    wreg     unsigned char 
   286 ;;  channels        1    0[COMRAM] unsigned char 
   287 ;;  justified       1    1[COMRAM] unsigned char 
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  xtal_frec       1    4[COMRAM] unsigned char 
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2, status,0
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   299 ;;      Params:         2       0       0       0       0       0       0       0       0
   300 ;;      Locals:         1       0       0       0       0       0       0       0       0
   301 ;;      Temps:          2       0       0       0       0       0       0       0       0
   302 ;;      Totals:         5       0       0       0       0       0       0       0       0
   303 ;;Total ram usage:        5 bytes
   304 ;; Hardware stack levels used: 1
   305 ;; This function calls:
   306 ;;		Nothing
   307 ;; This function is called by:
   308 ;;		_main
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           	psect	text2
   313  007F50                     __ptext2:
   314                           	callstack 0
   315  007F50                     _initADC:
   316                           	callstack 30
   317                           
   318                           ;incstack = 0
   319                           ;initADC@xtal_frec stored from wreg
   320  007F50  6E05               	movwf	initADC@xtal_frec^0,c
   321  007F52                     
   322                           ;../Peripherals/ADC/ADC4550.c: 13:     ADCON1bits.PCFG = 15 - channels;
   323  007F52  5001               	movf	initADC@channels^0,w,c
   324  007F54  080F               	sublw	15
   325  007F56  6E03               	movwf	??_initADC^0,c
   326  007F58  50C1               	movf	193,w,c	;volatile
   327  007F5A  1803               	xorwf	??_initADC^0,w,c
   328  007F5C  0BF0               	andlw	-16
   329  007F5E  1803               	xorwf	??_initADC^0,w,c
   330  007F60  6EC1               	movwf	193,c	;volatile
   331  007F62                     
   332                           ;../Peripherals/ADC/ADC4550.c: 14:     ADCON1bits.VCFG = 0;
   333  007F62  0ECF               	movlw	-49
   334  007F64  16C1               	andwf	193,f,c	;volatile
   335  007F66                     
   336                           ;../Peripherals/ADC/ADC4550.c: 15:     ADCON2bits.ADFM = justified;
   337  007F66  B002               	btfsc	initADC@justified^0,0,c
   338  007F68  D002               	bra	u45
   339  007F6A  9EC0               	bcf	192,7,c	;volatile
   340  007F6C  D001               	bra	u46
   341  007F6E                     u45:
   342  007F6E  8EC0               	bsf	192,7,c	;volatile
   343  007F70                     u46:
   344                           
   345                           ;../Peripherals/ADC/ADC4550.c: 16:     switch(xtal_frec){
   346  007F70  EFE2  F03F         	goto	l786
   347  007F74                     l776:
   348                           
   349                           ;../Peripherals/ADC/ADC4550.c: 18:             ADCON2bits.ADCS = 0b100;
   350  007F74  50C0               	movf	192,w,c	;volatile
   351  007F76  0BF8               	andlw	-8
   352  007F78  0904               	iorlw	4
   353  007F7A  6EC0               	movwf	192,c	;volatile
   354                           
   355                           ;../Peripherals/ADC/ADC4550.c: 19:             ADCON2bits.ACQT = 2;
   356  007F7C  50C0               	movf	192,w,c	;volatile
   357  007F7E  0BC7               	andlw	-57
   358  007F80  0910               	iorlw	16
   359  007F82  6EC0               	movwf	192,c	;volatile
   360                           
   361                           ;../Peripherals/ADC/ADC4550.c: 21:             break;
   362  007F84  EFFF  F03F         	goto	l17
   363  007F88                     l778:
   364                           
   365                           ;../Peripherals/ADC/ADC4550.c: 23:             ADCON2bits.ADCS = 0b001;
   366  007F88  50C0               	movf	192,w,c	;volatile
   367  007F8A  0BF8               	andlw	-8
   368  007F8C  0901               	iorlw	1
   369  007F8E  6EC0               	movwf	192,c	;volatile
   370                           
   371                           ;../Peripherals/ADC/ADC4550.c: 24:             ADCON2bits.ACQT = 2;
   372  007F90  50C0               	movf	192,w,c	;volatile
   373  007F92  0BC7               	andlw	-57
   374  007F94  0910               	iorlw	16
   375  007F96  6EC0               	movwf	192,c	;volatile
   376                           
   377                           ;../Peripherals/ADC/ADC4550.c: 25:             break;
   378  007F98  EFFF  F03F         	goto	l17
   379  007F9C                     l780:
   380                           
   381                           ;../Peripherals/ADC/ADC4550.c: 28:             ADCON2bits.ADCS = 0b101;
   382  007F9C  50C0               	movf	192,w,c	;volatile
   383  007F9E  0BF8               	andlw	-8
   384  007FA0  0905               	iorlw	5
   385  007FA2  6EC0               	movwf	192,c	;volatile
   386                           
   387                           ;../Peripherals/ADC/ADC4550.c: 29:             ADCON2bits.ACQT = 2;
   388  007FA4  50C0               	movf	192,w,c	;volatile
   389  007FA6  0BC7               	andlw	-57
   390  007FA8  0910               	iorlw	16
   391  007FAA  6EC0               	movwf	192,c	;volatile
   392                           
   393                           ;../Peripherals/ADC/ADC4550.c: 30:             break;
   394  007FAC  EFFF  F03F         	goto	l17
   395  007FB0                     l782:
   396                           
   397                           ;../Peripherals/ADC/ADC4550.c: 32:             ADCON2bits.ADCS = 0b010;
   398  007FB0  50C0               	movf	192,w,c	;volatile
   399  007FB2  0BF8               	andlw	-8
   400  007FB4  0902               	iorlw	2
   401  007FB6  6EC0               	movwf	192,c	;volatile
   402                           
   403                           ;../Peripherals/ADC/ADC4550.c: 33:             ADCON2bits.ACQT = 2;
   404  007FB8  50C0               	movf	192,w,c	;volatile
   405  007FBA  0BC7               	andlw	-57
   406  007FBC  0910               	iorlw	16
   407  007FBE  6EC0               	movwf	192,c	;volatile
   408                           
   409                           ;../Peripherals/ADC/ADC4550.c: 34:             break;
   410  007FC0  EFFF  F03F         	goto	l17
   411  007FC4                     l786:
   412  007FC4  5005               	movf	initADC@xtal_frec^0,w,c
   413  007FC6  6E03               	movwf	??_initADC^0,c
   414  007FC8  6A04               	clrf	(??_initADC+1)^0,c
   415                           
   416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   417                           ; Switch size 1, requested type "simple"
   418                           ; Number of cases is 1, Range of values is 0 to 0
   419                           ; switch strategies available:
   420                           ; Name         Instructions Cycles
   421                           ; simple_byte            4     3 (average)
   422                           ;	Chosen strategy is simple_byte
   423  007FCA  5004               	movf	(??_initADC+1)^0,w,c
   424  007FCC  0A00               	xorlw	0	; case 0
   425  007FCE  B4D8               	btfsc	status,2,c
   426  007FD0  EFEC  F03F         	goto	l818
   427  007FD4  EFFF  F03F         	goto	l17
   428  007FD8                     l818:
   429                           
   430                           ; Switch size 1, requested type "simple"
   431                           ; Number of cases is 4, Range of values is 0 to 3
   432                           ; switch strategies available:
   433                           ; Name         Instructions Cycles
   434                           ; simple_byte           13     7 (average)
   435                           ;	Chosen strategy is simple_byte
   436  007FD8  5003               	movf	??_initADC^0,w,c
   437  007FDA  0A00               	xorlw	0	; case 0
   438  007FDC  B4D8               	btfsc	status,2,c
   439  007FDE  EFBA  F03F         	goto	l776
   440  007FE2  0A01               	xorlw	1	; case 1
   441  007FE4  B4D8               	btfsc	status,2,c
   442  007FE6  EFC4  F03F         	goto	l778
   443  007FEA  0A03               	xorlw	3	; case 2
   444  007FEC  B4D8               	btfsc	status,2,c
   445  007FEE  EFCE  F03F         	goto	l780
   446  007FF2  0A01               	xorlw	1	; case 3
   447  007FF4  B4D8               	btfsc	status,2,c
   448  007FF6  EFD8  F03F         	goto	l782
   449  007FFA  EFFF  F03F         	goto	l17
   450  007FFE                     l17:
   451  007FFE  0012               	return		;funcret
   452  008000                     __end_of_initADC:
   453                           	callstack 0
   454  0000                     
   455                           	psect	rparam
   456  0000                     
   457                           	psect	idloc
   458                           
   459                           ;Config register IDLOC0 @ 0x200000
   460                           ;	unspecified, using default values
   461  200000                     	org	2097152
   462  200000  FF                 	db	255
   463                           
   464                           ;Config register IDLOC1 @ 0x200001
   465                           ;	unspecified, using default values
   466  200001                     	org	2097153
   467  200001  FF                 	db	255
   468                           
   469                           ;Config register IDLOC2 @ 0x200002
   470                           ;	unspecified, using default values
   471  200002                     	org	2097154
   472  200002  FF                 	db	255
   473                           
   474                           ;Config register IDLOC3 @ 0x200003
   475                           ;	unspecified, using default values
   476  200003                     	org	2097155
   477  200003  FF                 	db	255
   478                           
   479                           ;Config register IDLOC4 @ 0x200004
   480                           ;	unspecified, using default values
   481  200004                     	org	2097156
   482  200004  FF                 	db	255
   483                           
   484                           ;Config register IDLOC5 @ 0x200005
   485                           ;	unspecified, using default values
   486  200005                     	org	2097157
   487  200005  FF                 	db	255
   488                           
   489                           ;Config register IDLOC6 @ 0x200006
   490                           ;	unspecified, using default values
   491  200006                     	org	2097158
   492  200006  FF                 	db	255
   493                           
   494                           ;Config register IDLOC7 @ 0x200007
   495                           ;	unspecified, using default values
   496  200007                     	org	2097159
   497  200007  FF                 	db	255
   498                           
   499                           	psect	config
   500                           
   501                           ;Config register CONFIG1L @ 0x300000
   502                           ;	PLL Prescaler Selection bits
   503                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   504                           ;	System Clock Postscaler Selection bits
   505                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   506                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   507                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   508  300000                     	org	3145728
   509  300000  00                 	db	0
   510                           
   511                           ;Config register CONFIG1H @ 0x300001
   512                           ;	Oscillator Selection bits
   513                           ;	FOSC = HS, HS oscillator (HS)
   514                           ;	Fail-Safe Clock Monitor Enable bit
   515                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   516                           ;	Internal/External Oscillator Switchover bit
   517                           ;	IESO = OFF, Oscillator Switchover mode disabled
   518  300001                     	org	3145729
   519  300001  0C                 	db	12
   520                           
   521                           ;Config register CONFIG2L @ 0x300002
   522                           ;	Power-up Timer Enable bit
   523                           ;	PWRT = OFF, PWRT disabled
   524                           ;	Brown-out Reset Enable bits
   525                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   526                           ;	Brown-out Reset Voltage bits
   527                           ;	BORV = 3, Minimum setting 2.05V
   528                           ;	USB Voltage Regulator Enable bit
   529                           ;	VREGEN = OFF, USB voltage regulator disabled
   530  300002                     	org	3145730
   531  300002  1F                 	db	31
   532                           
   533                           ;Config register CONFIG2H @ 0x300003
   534                           ;	Watchdog Timer Enable bit
   535                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   536                           ;	Watchdog Timer Postscale Select bits
   537                           ;	WDTPS = 32768, 1:32768
   538  300003                     	org	3145731
   539  300003  1E                 	db	30
   540                           
   541                           ; Padding undefined space
   542  300004                     	org	3145732
   543  300004  FF                 	db	255
   544                           
   545                           ;Config register CONFIG3H @ 0x300005
   546                           ;	CCP2 MUX bit
   547                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   548                           ;	PORTB A/D Enable bit
   549                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   550                           ;	Low-Power Timer 1 Oscillator Enable bit
   551                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   552                           ;	MCLR Pin Enable bit
   553                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   554  300005                     	org	3145733
   555  300005  81                 	db	129
   556                           
   557                           ;Config register CONFIG4L @ 0x300006
   558                           ;	Stack Full/Underflow Reset Enable bit
   559                           ;	STVREN = ON, Stack full/underflow will cause Reset
   560                           ;	Single-Supply ICSP Enable bit
   561                           ;	LVP = OFF, Single-Supply ICSP disabled
   562                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   563                           ;	ICPRT = OFF, ICPORT disabled
   564                           ;	Extended Instruction Set Enable bit
   565                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   566                           ;	Background Debugger Enable bit
   567                           ;	DEBUG = 0x1, unprogrammed default
   568  300006                     	org	3145734
   569  300006  81                 	db	129
   570                           
   571                           ; Padding undefined space
   572  300007                     	org	3145735
   573  300007  FF                 	db	255
   574                           
   575                           ;Config register CONFIG5L @ 0x300008
   576                           ;	Code Protection bit
   577                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   578                           ;	Code Protection bit
   579                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   580                           ;	Code Protection bit
   581                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   582                           ;	Code Protection bit
   583                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   584  300008                     	org	3145736
   585  300008  0F                 	db	15
   586                           
   587                           ;Config register CONFIG5H @ 0x300009
   588                           ;	Boot Block Code Protection bit
   589                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   590                           ;	Data EEPROM Code Protection bit
   591                           ;	CPD = OFF, Data EEPROM is not code-protected
   592  300009                     	org	3145737
   593  300009  C0                 	db	192
   594                           
   595                           ;Config register CONFIG6L @ 0x30000A
   596                           ;	Write Protection bit
   597                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   598                           ;	Write Protection bit
   599                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   600                           ;	Write Protection bit
   601                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   602                           ;	Write Protection bit
   603                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   604  30000A                     	org	3145738
   605  30000A  0F                 	db	15
   606                           
   607                           ;Config register CONFIG6H @ 0x30000B
   608                           ;	Configuration Register Write Protection bit
   609                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   610                           ;	Boot Block Write Protection bit
   611                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   612                           ;	Data EEPROM Write Protection bit
   613                           ;	WRTD = OFF, Data EEPROM is not write-protected
   614  30000B                     	org	3145739
   615  30000B  E0                 	db	224
   616                           
   617                           ;Config register CONFIG7L @ 0x30000C
   618                           ;	Table Read Protection bit
   619                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   620                           ;	Table Read Protection bit
   621                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   622                           ;	Table Read Protection bit
   623                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   624                           ;	Table Read Protection bit
   625                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   626  30000C                     	org	3145740
   627  30000C  0F                 	db	15
   628                           
   629                           ;Config register CONFIG7H @ 0x30000D
   630                           ;	Boot Block Table Read Protection bit
   631                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   632  30000D                     	org	3145741
   633  30000D  40                 	db	64
   634                           tosu	equ	0xFFF
   635                           tosh	equ	0xFFE
   636                           tosl	equ	0xFFD
   637                           stkptr	equ	0xFFC
   638                           pclatu	equ	0xFFB
   639                           pclath	equ	0xFFA
   640                           pcl	equ	0xFF9
   641                           tblptru	equ	0xFF8
   642                           tblptrh	equ	0xFF7
   643                           tblptrl	equ	0xFF6
   644                           tablat	equ	0xFF5
   645                           prodh	equ	0xFF4
   646                           prodl	equ	0xFF3
   647                           indf0	equ	0xFEF
   648                           postinc0	equ	0xFEE
   649                           postdec0	equ	0xFED
   650                           preinc0	equ	0xFEC
   651                           plusw0	equ	0xFEB
   652                           fsr0h	equ	0xFEA
   653                           fsr0l	equ	0xFE9
   654                           wreg	equ	0xFE8
   655                           indf1	equ	0xFE7
   656                           postinc1	equ	0xFE6
   657                           postdec1	equ	0xFE5
   658                           preinc1	equ	0xFE4
   659                           plusw1	equ	0xFE3
   660                           fsr1h	equ	0xFE2
   661                           fsr1l	equ	0xFE1
   662                           bsr	equ	0xFE0
   663                           indf2	equ	0xFDF
   664                           postinc2	equ	0xFDE
   665                           postdec2	equ	0xFDD
   666                           preinc2	equ	0xFDC
   667                           plusw2	equ	0xFDB
   668                           fsr2h	equ	0xFDA
   669                           fsr2l	equ	0xFD9
   670                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_initADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     263
                                              5 COMRAM     1     1      0
                            _initADC
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2      44
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initADC                                              5     3      2     218
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initADC
   _readADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 26 12:19:18 2024

                     l21 7F4E                       l22 7F36                       l24 7F44  
                     l17 7FFE                       u50 7F14                       u51 7F10  
                     u60 7F44                       u45 7F6E                       u61 7F40  
                     u46 7F70                       u77 7EF0                      l800 7F32  
                    l802 7F34                      l810 7EE6                      l812 7EEA  
                    l804 7EC6                      l806 7ED2                      l808 7EE0  
                    l818 7FD8                      l770 7F52                      l780 7F9C  
                    l772 7F62                      l782 7FB0                      l774 7F66  
                    l776 7F74                      l792 7F04                      l778 7F88  
                    l786 7FC4                      l794 7F14                      l798 7F20  
                    wreg 000FE8                     _LATD 000F8C                     _main 7EC6  
                   start 0000             ___param_bank 000000                    ?_main 0001  
                  _ADRES 000FC3                    _PORTD 000F83                    _TRISD 000F95  
        __end_of_initADC 8000          __end_of_readADC 7F50                    status 000FD8  
        __initialization 7EBC             __end_of_main 7F02                   ??_main 0006  
          __activetblptr 000002                   _ADRESH 000FC4                   isa$std 000001  
              ??_initADC 0003                ??_readADC 0003                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7EBC            ___rparam_used 000001  
         __pcstackCOMRAM 0001          initADC@channels 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7EBC                  __ramtop 0800  
                __ptext0 7EC6                  __ptext1 7F02                  __ptext2 7F50  
                _initADC 7F50                  _readADC 7F02     end_of_initialization 7EBC  
          __Lmediumconst 0000      start_initialization 7EBC                 ?_initADC 0001  
               ?_readADC 0001               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0                 __Hrparam 0000         initADC@justified 0002  
               __Lrparam 0000           readADC@channel 0004         __size_of_initADC 00B0  
       __size_of_readADC 004E         initADC@xtal_frec 0005            __size_of_main 003C  
               isa$xinst 000000  
